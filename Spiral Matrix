

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> v1;

        int d = 0;
        int nCols = (matrix[0]).size();
        int nRows = matrix.size();
        int ab = nRows * nCols;
        int count = 0;
        if (nCols < nRows) {
            d = (nCols + 1) / 2;
        } else {
            d = (nRows + 1) / 2;
        }

        for (int i = 0; i < d; i++) {

            for (int j = i; j < nCols - i && count < ab; j++) {
                v1.push_back(matrix[i][j]);
                count++;
            }
            for (int a = i + 1; a < nRows - i && count < ab; a++) {
                v1.push_back(matrix[a][nCols - 1 - i]);
                count++;
            }
            for (int b = nCols - i - 2; b >= i && count < ab; b--) {
                v1.push_back(matrix[nRows - 1 - i][b]);
                count++;
            }
            for (int c = nRows - 2 - i; c >= i + 1 && count < ab; c--) {
                v1.push_back(matrix[c][i]);
                count++;
            }
        }
        return v1;
    }
};
